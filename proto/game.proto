syntax = "proto3";

package quibbble.com.game;
option go_package = "/game";

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";

// gRPC definition for the Game Server.
// This game service should be implemented by developers
// looking to create their own game(s).
service Game {
    // Initialize the game for the first time.
    rpc Init(Snapshot) returns (google.protobuf.Empty) {}

    // Load an existing snapshot into the game.
    rpc Load(Snapshot) returns (google.protobuf.Empty) {}

    // Does an action on the game.
    rpc PlayAction(Action) returns (google.protobuf.Empty) {}

    // Retrieve the current game snapshot from a specific team's point of view.
    rpc GetSnapshot(View) returns (Snapshot) {}
}

// Action defines a move someone can make that modifies the game state.
message Action {
    // The team doing the action.
    string team = 1;

    // The kind of action to perform.
    string kind = 2;

    // Any additional information needed to do the action.
    optional google.protobuf.Any spec = 3;
}

// Snapshot defines the game state at a specific point in time.
message Snapshot {
    // A seed used to generate deterministic randomness in the game.
    int64 seed = 1;

    // The list of all teams playing the game.
    repeated string teams = 2;

    // The team who is currently active. 
    string turn = 3;

    // The list of teams that have won the game.
    repeated string winners = 4;

    // Any additional information about the state of the game i.e. board, decks, hands, etc.
    optional google.protobuf.Any spec = 5;
}

// View defines who is looking at the game.
message View {
    // The team requesting the game snapshot. 
    string team = 1;
}
