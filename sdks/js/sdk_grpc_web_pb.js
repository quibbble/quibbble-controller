/**
 * @fileoverview gRPC-Web generated client stub for quibbble.sdk
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v2.0.0
// 	protoc              v6.32.0
// source: proto/sdk.proto


/* eslint-disable */
// @ts-nocheck


goog.provide('proto.quibbble.sdk.SDKClient');
goog.provide('proto.quibbble.sdk.SDKPromiseClient');

goog.require('grpc.web.MethodDescriptor');
goog.require('grpc.web.MethodType');
goog.require('grpc.web.GrpcWebClientBase');
goog.require('grpc.web.AbstractClientBase');
goog.require('grpc.web.ClientReadableStream');
goog.require('grpc.web.RpcError');
goog.require('proto.google.protobuf.Empty');
goog.require('proto.quibbble.sdk.ActionRequest');
goog.require('proto.quibbble.sdk.InitGameRequest');
goog.require('proto.quibbble.sdk.SnapshotRequest');
goog.require('proto.quibbble.sdk.SnapshotResponse');

goog.requireType('grpc.web.ClientOptions');



goog.scope(function() {

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.quibbble.sdk.SDKClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.quibbble.sdk.SDKPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.quibbble.sdk.InitGameRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_SDK_InitGame = new grpc.web.MethodDescriptor(
  '/quibbble.sdk.SDK/InitGame',
  grpc.web.MethodType.UNARY,
  proto.quibbble.sdk.InitGameRequest,
  proto.google.protobuf.Empty,
  /**
   * @param {!proto.quibbble.sdk.InitGameRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.google.protobuf.Empty.deserializeBinary
);


/**
 * @param {!proto.quibbble.sdk.InitGameRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.quibbble.sdk.SDKClient.prototype.initGame =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/quibbble.sdk.SDK/InitGame',
      request,
      metadata || {},
      methodDescriptor_SDK_InitGame,
      callback);
};


/**
 * @param {!proto.quibbble.sdk.InitGameRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.quibbble.sdk.SDKPromiseClient.prototype.initGame =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/quibbble.sdk.SDK/InitGame',
      request,
      metadata || {},
      methodDescriptor_SDK_InitGame);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.quibbble.sdk.ActionRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_SDK_DoAction = new grpc.web.MethodDescriptor(
  '/quibbble.sdk.SDK/DoAction',
  grpc.web.MethodType.UNARY,
  proto.quibbble.sdk.ActionRequest,
  proto.google.protobuf.Empty,
  /**
   * @param {!proto.quibbble.sdk.ActionRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.google.protobuf.Empty.deserializeBinary
);


/**
 * @param {!proto.quibbble.sdk.ActionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.quibbble.sdk.SDKClient.prototype.doAction =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/quibbble.sdk.SDK/DoAction',
      request,
      metadata || {},
      methodDescriptor_SDK_DoAction,
      callback);
};


/**
 * @param {!proto.quibbble.sdk.ActionRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.quibbble.sdk.SDKPromiseClient.prototype.doAction =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/quibbble.sdk.SDK/DoAction',
      request,
      metadata || {},
      methodDescriptor_SDK_DoAction);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.quibbble.sdk.SnapshotRequest,
 *   !proto.quibbble.sdk.SnapshotResponse>}
 */
const methodDescriptor_SDK_GetSnapshot = new grpc.web.MethodDescriptor(
  '/quibbble.sdk.SDK/GetSnapshot',
  grpc.web.MethodType.UNARY,
  proto.quibbble.sdk.SnapshotRequest,
  proto.quibbble.sdk.SnapshotResponse,
  /**
   * @param {!proto.quibbble.sdk.SnapshotRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.quibbble.sdk.SnapshotResponse.deserializeBinary
);


/**
 * @param {!proto.quibbble.sdk.SnapshotRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.quibbble.sdk.SnapshotResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.quibbble.sdk.SnapshotResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.quibbble.sdk.SDKClient.prototype.getSnapshot =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/quibbble.sdk.SDK/GetSnapshot',
      request,
      metadata || {},
      methodDescriptor_SDK_GetSnapshot,
      callback);
};


/**
 * @param {!proto.quibbble.sdk.SnapshotRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.quibbble.sdk.SnapshotResponse>}
 *     Promise that resolves to the response
 */
proto.quibbble.sdk.SDKPromiseClient.prototype.getSnapshot =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/quibbble.sdk.SDK/GetSnapshot',
      request,
      metadata || {},
      methodDescriptor_SDK_GetSnapshot);
};


}); // goog.scope

