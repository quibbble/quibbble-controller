// source: proto/sdk.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.quibbble.sdk.Snapshot');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('jspb.internal.public_for_gencode');
goog.require('proto.google.protobuf.Any');
goog.require('proto.quibbble.sdk.Action');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.quibbble.sdk.Snapshot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.quibbble.sdk.Snapshot.repeatedFields_, null);
};
goog.inherits(proto.quibbble.sdk.Snapshot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.quibbble.sdk.Snapshot.displayName = 'proto.quibbble.sdk.Snapshot';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.quibbble.sdk.Snapshot.repeatedFields_ = [2,4,5,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.quibbble.sdk.Snapshot.prototype.toObject = function(opt_includeInstance) {
  return proto.quibbble.sdk.Snapshot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.quibbble.sdk.Snapshot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quibbble.sdk.Snapshot.toObject = function(includeInstance, msg) {
  var f, obj = {
kind: jspb.Message.getFieldWithDefault(msg, 1, ""),
teamsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
turn: jspb.Message.getFieldWithDefault(msg, 3, ""),
winnersList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
historyList: jspb.Message.toObjectList(msg.getHistoryList(),
    proto.quibbble.sdk.Action.toObject, includeInstance),
seed: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
message: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
actionsList: jspb.Message.toObjectList(msg.getActionsList(),
    proto.quibbble.sdk.Action.toObject, includeInstance),
spec: (f = msg.getSpec()) && proto.google.protobuf.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.quibbble.sdk.Snapshot}
 */
proto.quibbble.sdk.Snapshot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.quibbble.sdk.Snapshot;
  return proto.quibbble.sdk.Snapshot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.quibbble.sdk.Snapshot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.quibbble.sdk.Snapshot}
 */
proto.quibbble.sdk.Snapshot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.addTeams(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setTurn(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.addWinners(value);
      break;
    case 5:
      var value = new proto.quibbble.sdk.Action;
      reader.readMessage(value,proto.quibbble.sdk.Action.deserializeBinaryFromReader);
      msg.addHistory(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSeed(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readStringRequireUtf8());
      msg.setMessage(value);
      break;
    case 8:
      var value = new proto.quibbble.sdk.Action;
      reader.readMessage(value,proto.quibbble.sdk.Action.deserializeBinaryFromReader);
      msg.addActions(value);
      break;
    case 9:
      var value = new proto.google.protobuf.Any;
      reader.readMessage(value,proto.google.protobuf.Any.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.quibbble.sdk.Snapshot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.quibbble.sdk.Snapshot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.quibbble.sdk.Snapshot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.quibbble.sdk.Snapshot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTeamsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getTurn();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWinnersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getHistoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.quibbble.sdk.Action.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.quibbble.sdk.Action.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.google.protobuf.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional string kind = 1;
 * @return {string}
 */
proto.quibbble.sdk.Snapshot.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.quibbble.sdk.Snapshot} returns this
 */
proto.quibbble.sdk.Snapshot.prototype.setKind = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string teams = 2;
 * @return {!Array<string>}
 */
proto.quibbble.sdk.Snapshot.prototype.getTeamsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.quibbble.sdk.Snapshot} returns this
 */
proto.quibbble.sdk.Snapshot.prototype.setTeamsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.quibbble.sdk.Snapshot} returns this
 */
proto.quibbble.sdk.Snapshot.prototype.addTeams = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quibbble.sdk.Snapshot} returns this
 */
proto.quibbble.sdk.Snapshot.prototype.clearTeamsList = function() {
  return this.setTeamsList([]);
};


/**
 * optional string turn = 3;
 * @return {string}
 */
proto.quibbble.sdk.Snapshot.prototype.getTurn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.quibbble.sdk.Snapshot} returns this
 */
proto.quibbble.sdk.Snapshot.prototype.setTurn = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string winners = 4;
 * @return {!Array<string>}
 */
proto.quibbble.sdk.Snapshot.prototype.getWinnersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.quibbble.sdk.Snapshot} returns this
 */
proto.quibbble.sdk.Snapshot.prototype.setWinnersList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.quibbble.sdk.Snapshot} returns this
 */
proto.quibbble.sdk.Snapshot.prototype.addWinners = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quibbble.sdk.Snapshot} returns this
 */
proto.quibbble.sdk.Snapshot.prototype.clearWinnersList = function() {
  return this.setWinnersList([]);
};


/**
 * repeated Action history = 5;
 * @return {!Array<!proto.quibbble.sdk.Action>}
 */
proto.quibbble.sdk.Snapshot.prototype.getHistoryList = function() {
  return /** @type{!Array<!proto.quibbble.sdk.Action>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quibbble.sdk.Action, 5));
};


/**
 * @param {!Array<!proto.quibbble.sdk.Action>} value
 * @return {!proto.quibbble.sdk.Snapshot} returns this
*/
proto.quibbble.sdk.Snapshot.prototype.setHistoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.quibbble.sdk.Action=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quibbble.sdk.Action}
 */
proto.quibbble.sdk.Snapshot.prototype.addHistory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.quibbble.sdk.Action, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quibbble.sdk.Snapshot} returns this
 */
proto.quibbble.sdk.Snapshot.prototype.clearHistoryList = function() {
  return this.setHistoryList([]);
};


/**
 * optional int64 seed = 6;
 * @return {number}
 */
proto.quibbble.sdk.Snapshot.prototype.getSeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.quibbble.sdk.Snapshot} returns this
 */
proto.quibbble.sdk.Snapshot.prototype.setSeed = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quibbble.sdk.Snapshot} returns this
 */
proto.quibbble.sdk.Snapshot.prototype.clearSeed = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quibbble.sdk.Snapshot.prototype.hasSeed = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string message = 7;
 * @return {string}
 */
proto.quibbble.sdk.Snapshot.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.quibbble.sdk.Snapshot} returns this
 */
proto.quibbble.sdk.Snapshot.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.quibbble.sdk.Snapshot} returns this
 */
proto.quibbble.sdk.Snapshot.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quibbble.sdk.Snapshot.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated Action actions = 8;
 * @return {!Array<!proto.quibbble.sdk.Action>}
 */
proto.quibbble.sdk.Snapshot.prototype.getActionsList = function() {
  return /** @type{!Array<!proto.quibbble.sdk.Action>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.quibbble.sdk.Action, 8));
};


/**
 * @param {!Array<!proto.quibbble.sdk.Action>} value
 * @return {!proto.quibbble.sdk.Snapshot} returns this
*/
proto.quibbble.sdk.Snapshot.prototype.setActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.quibbble.sdk.Action=} opt_value
 * @param {number=} opt_index
 * @return {!proto.quibbble.sdk.Action}
 */
proto.quibbble.sdk.Snapshot.prototype.addActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.quibbble.sdk.Action, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.quibbble.sdk.Snapshot} returns this
 */
proto.quibbble.sdk.Snapshot.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};


/**
 * optional google.protobuf.Any spec = 9;
 * @return {?proto.google.protobuf.Any}
 */
proto.quibbble.sdk.Snapshot.prototype.getSpec = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Any, 9));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.quibbble.sdk.Snapshot} returns this
*/
proto.quibbble.sdk.Snapshot.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.quibbble.sdk.Snapshot} returns this
 */
proto.quibbble.sdk.Snapshot.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.quibbble.sdk.Snapshot.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 9) != null;
};


