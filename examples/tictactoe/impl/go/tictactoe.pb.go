// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: tictactoe.proto

package tictactoe

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TicTacToeRow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Column        []string               `protobuf:"bytes,1,rep,name=column,proto3" json:"column,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TicTacToeRow) Reset() {
	*x = TicTacToeRow{}
	mi := &file_tictactoe_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicTacToeRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicTacToeRow) ProtoMessage() {}

func (x *TicTacToeRow) ProtoReflect() protoreflect.Message {
	mi := &file_tictactoe_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicTacToeRow.ProtoReflect.Descriptor instead.
func (*TicTacToeRow) Descriptor() ([]byte, []int) {
	return file_tictactoe_proto_rawDescGZIP(), []int{0}
}

func (x *TicTacToeRow) GetColumn() []string {
	if x != nil {
		return x.Column
	}
	return nil
}

type TicTacToeSnapshotSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Row           []*TicTacToeRow        `protobuf:"bytes,1,rep,name=Row,proto3" json:"Row,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TicTacToeSnapshotSpec) Reset() {
	*x = TicTacToeSnapshotSpec{}
	mi := &file_tictactoe_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicTacToeSnapshotSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicTacToeSnapshotSpec) ProtoMessage() {}

func (x *TicTacToeSnapshotSpec) ProtoReflect() protoreflect.Message {
	mi := &file_tictactoe_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicTacToeSnapshotSpec.ProtoReflect.Descriptor instead.
func (*TicTacToeSnapshotSpec) Descriptor() ([]byte, []int) {
	return file_tictactoe_proto_rawDescGZIP(), []int{1}
}

func (x *TicTacToeSnapshotSpec) GetRow() []*TicTacToeRow {
	if x != nil {
		return x.Row
	}
	return nil
}

type TicTacToeMarkActionSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Row           int64                  `protobuf:"varint,1,opt,name=row,proto3" json:"row,omitempty"`
	Column        int64                  `protobuf:"varint,2,opt,name=column,proto3" json:"column,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TicTacToeMarkActionSpec) Reset() {
	*x = TicTacToeMarkActionSpec{}
	mi := &file_tictactoe_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicTacToeMarkActionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicTacToeMarkActionSpec) ProtoMessage() {}

func (x *TicTacToeMarkActionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_tictactoe_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicTacToeMarkActionSpec.ProtoReflect.Descriptor instead.
func (*TicTacToeMarkActionSpec) Descriptor() ([]byte, []int) {
	return file_tictactoe_proto_rawDescGZIP(), []int{2}
}

func (x *TicTacToeMarkActionSpec) GetRow() int64 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *TicTacToeMarkActionSpec) GetColumn() int64 {
	if x != nil {
		return x.Column
	}
	return 0
}

var File_tictactoe_proto protoreflect.FileDescriptor

const file_tictactoe_proto_rawDesc = "" +
	"\n" +
	"\x0ftictactoe.proto\x12\fquibbble.com\"&\n" +
	"\fTicTacToeRow\x12\x16\n" +
	"\x06column\x18\x01 \x03(\tR\x06column\"E\n" +
	"\x15TicTacToeSnapshotSpec\x12,\n" +
	"\x03Row\x18\x01 \x03(\v2\x1a.quibbble.com.TicTacToeRowR\x03Row\"C\n" +
	"\x17TicTacToeMarkActionSpec\x12\x10\n" +
	"\x03row\x18\x01 \x01(\x03R\x03row\x12\x16\n" +
	"\x06column\x18\x02 \x01(\x03R\x06columnB\rZ\v./tictactoeb\x06proto3"

var (
	file_tictactoe_proto_rawDescOnce sync.Once
	file_tictactoe_proto_rawDescData []byte
)

func file_tictactoe_proto_rawDescGZIP() []byte {
	file_tictactoe_proto_rawDescOnce.Do(func() {
		file_tictactoe_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tictactoe_proto_rawDesc), len(file_tictactoe_proto_rawDesc)))
	})
	return file_tictactoe_proto_rawDescData
}

var file_tictactoe_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_tictactoe_proto_goTypes = []any{
	(*TicTacToeRow)(nil),            // 0: quibbble.com.TicTacToeRow
	(*TicTacToeSnapshotSpec)(nil),   // 1: quibbble.com.TicTacToeSnapshotSpec
	(*TicTacToeMarkActionSpec)(nil), // 2: quibbble.com.TicTacToeMarkActionSpec
}
var file_tictactoe_proto_depIdxs = []int32{
	0, // 0: quibbble.com.TicTacToeSnapshotSpec.Row:type_name -> quibbble.com.TicTacToeRow
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_tictactoe_proto_init() }
func file_tictactoe_proto_init() {
	if File_tictactoe_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tictactoe_proto_rawDesc), len(file_tictactoe_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tictactoe_proto_goTypes,
		DependencyIndexes: file_tictactoe_proto_depIdxs,
		MessageInfos:      file_tictactoe_proto_msgTypes,
	}.Build()
	File_tictactoe_proto = out.File
	file_tictactoe_proto_goTypes = nil
	file_tictactoe_proto_depIdxs = nil
}
