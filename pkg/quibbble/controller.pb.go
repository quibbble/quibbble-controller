// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: controller.proto

package quibbble

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GameKey defines the fields needed to lookup a game.
type GameKey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The kind of game being played i.e. chess or carcassonne.
	Kind string `protobuf:"bytes,1,opt,name=Kind,proto3" json:"Kind,omitempty"`
	// The name of the specific game instance.
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	// A snapshot only required when creating a new game instance.
	Snapshot      *GameSnapshot `protobuf:"bytes,3,opt,name=snapshot,proto3,oneof" json:"snapshot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameKey) Reset() {
	*x = GameKey{}
	mi := &file_controller_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameKey) ProtoMessage() {}

func (x *GameKey) ProtoReflect() protoreflect.Message {
	mi := &file_controller_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameKey.ProtoReflect.Descriptor instead.
func (*GameKey) Descriptor() ([]byte, []int) {
	return file_controller_proto_rawDescGZIP(), []int{0}
}

func (x *GameKey) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *GameKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GameKey) GetSnapshot() *GameSnapshot {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type Activity struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Map from game kind to active game count.
	ActiveGames map[string]int64 `protobuf:"bytes,1,rep,name=active_games,json=activeGames,proto3" json:"active_games,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// Map from game kind to active player count.
	ActivePlayers map[string]int64 `protobuf:"bytes,2,rep,name=active_players,json=activePlayers,proto3" json:"active_players,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Activity) Reset() {
	*x = Activity{}
	mi := &file_controller_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_controller_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_controller_proto_rawDescGZIP(), []int{1}
}

func (x *Activity) GetActiveGames() map[string]int64 {
	if x != nil {
		return x.ActiveGames
	}
	return nil
}

func (x *Activity) GetActivePlayers() map[string]int64 {
	if x != nil {
		return x.ActivePlayers
	}
	return nil
}

var File_controller_proto protoreflect.FileDescriptor

const file_controller_proto_rawDesc = "" +
	"\n" +
	"\x10controller.proto\x12\fquibbble.com\x1a\x1bgoogle/protobuf/empty.proto\x1a\n" +
	"game.proto\"{\n" +
	"\aGameKey\x12\x12\n" +
	"\x04Kind\x18\x01 \x01(\tR\x04Kind\x12\x12\n" +
	"\x04Name\x18\x02 \x01(\tR\x04Name\x12;\n" +
	"\bsnapshot\x18\x03 \x01(\v2\x1a.quibbble.com.GameSnapshotH\x00R\bsnapshot\x88\x01\x01B\v\n" +
	"\t_snapshot\"\xaa\x02\n" +
	"\bActivity\x12J\n" +
	"\factive_games\x18\x01 \x03(\v2'.quibbble.com.Activity.ActiveGamesEntryR\vactiveGames\x12P\n" +
	"\x0eactive_players\x18\x02 \x03(\v2).quibbble.com.Activity.ActivePlayersEntryR\ractivePlayers\x1a>\n" +
	"\x10ActiveGamesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1a@\n" +
	"\x12ActivePlayersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x012\xfd\x01\n" +
	"\n" +
	"Controller\x129\n" +
	"\x06Create\x12\x15.quibbble.com.GameKey\x1a\x16.google.protobuf.Empty\"\x00\x129\n" +
	"\x06Delete\x12\x15.quibbble.com.GameKey\x1a\x16.google.protobuf.Empty\"\x00\x128\n" +
	"\x05Store\x12\x15.quibbble.com.GameKey\x1a\x16.google.protobuf.Empty\"\x00\x12?\n" +
	"\vGetActivity\x12\x16.google.protobuf.Empty\x1a\x16.quibbble.com.Activity\"\x00B\vZ\t/quibbbleb\x06proto3"

var (
	file_controller_proto_rawDescOnce sync.Once
	file_controller_proto_rawDescData []byte
)

func file_controller_proto_rawDescGZIP() []byte {
	file_controller_proto_rawDescOnce.Do(func() {
		file_controller_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_controller_proto_rawDesc), len(file_controller_proto_rawDesc)))
	})
	return file_controller_proto_rawDescData
}

var file_controller_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_controller_proto_goTypes = []any{
	(*GameKey)(nil),       // 0: quibbble.com.GameKey
	(*Activity)(nil),      // 1: quibbble.com.Activity
	nil,                   // 2: quibbble.com.Activity.ActiveGamesEntry
	nil,                   // 3: quibbble.com.Activity.ActivePlayersEntry
	(*GameSnapshot)(nil),  // 4: quibbble.com.GameSnapshot
	(*emptypb.Empty)(nil), // 5: google.protobuf.Empty
}
var file_controller_proto_depIdxs = []int32{
	4, // 0: quibbble.com.GameKey.snapshot:type_name -> quibbble.com.GameSnapshot
	2, // 1: quibbble.com.Activity.active_games:type_name -> quibbble.com.Activity.ActiveGamesEntry
	3, // 2: quibbble.com.Activity.active_players:type_name -> quibbble.com.Activity.ActivePlayersEntry
	0, // 3: quibbble.com.Controller.Create:input_type -> quibbble.com.GameKey
	0, // 4: quibbble.com.Controller.Delete:input_type -> quibbble.com.GameKey
	0, // 5: quibbble.com.Controller.Store:input_type -> quibbble.com.GameKey
	5, // 6: quibbble.com.Controller.GetActivity:input_type -> google.protobuf.Empty
	5, // 7: quibbble.com.Controller.Create:output_type -> google.protobuf.Empty
	5, // 8: quibbble.com.Controller.Delete:output_type -> google.protobuf.Empty
	5, // 9: quibbble.com.Controller.Store:output_type -> google.protobuf.Empty
	1, // 10: quibbble.com.Controller.GetActivity:output_type -> quibbble.com.Activity
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_controller_proto_init() }
func file_controller_proto_init() {
	if File_controller_proto != nil {
		return
	}
	file_game_proto_init()
	file_controller_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_controller_proto_rawDesc), len(file_controller_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_controller_proto_goTypes,
		DependencyIndexes: file_controller_proto_depIdxs,
		MessageInfos:      file_controller_proto_msgTypes,
	}.Build()
	File_controller_proto = out.File
	file_controller_proto_goTypes = nil
	file_controller_proto_depIdxs = nil
}
